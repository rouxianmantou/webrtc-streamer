dist: bionic
env:
  matrix:
    - |
      CMAKE_OPTIONS=
    - |
      CMAKE_OPTIONS='-DCMAKE_SYSTEM_PROCESSOR=armv6l -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY'
    - |
      CMAKE_OPTIONS='-DCMAKE_SYSTEM_PROCESSOR=armv7l -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_C_COMPILER=arm-linux-gnueabihf-gcc -DCMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++ -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY'
language: cpp
compiler:
- gcc
script:
- sudo apt-get install --no-install-recommends -y libgtk-3-dev libasound2-dev crossbuild-essential-armhf
# get toolchain
- git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git && export PATH=$PATH:$(pwd)/depot_tools
# get WebRTC
- mkdir ../webrtc
- pushd ../webrtc
- travis_wait 30 fetch --no-history --nohooks webrtc
# patch webrtc to not download chromium-webrtc-resources
- sed -i -e "s|'src/resources'],|'src/resources'],'condition':'rtc_include_tests==true',|" src/DEPS
# get arm sysroot
- src/build/linux/sysroot_scripts/install-sysroot.py --arch=arm
# get WebRTC dependencies
- travis_wait 30 gclient sync
- popd
# build
- echo CMAKE_OPTIONS=${CMAKE_OPTIONS}
- cmake ${CMAKE_OPTIONS} . && make && cpack
before_deploy:
- export RELEASE_PKG_FILE=$(ls *.tar.gz)
- echo "RELEASE_PKG_FILE=${RELEASE_PKG_FILE}"   